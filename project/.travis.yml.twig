# DO NOT EDIT THIS FILE!
#
# It's auto-generated by sonata-project/dev-kit package.

branches:
  only:
{% for branch in branches|keys %}
    - {{ branch }}
{% endfor %}

language: php

php:
{% for version in php %}
  - '{{ version }}'
{% endfor %}
  - nightly

{% if services is not empty %}
services:
{% for service in services %}
  - {{ service }}
{% endfor %}

{% endif %}
sudo: false
dist: trusty

cache:
  pip: true
  directories:
    - $HOME/.composer/cache/files

env:
  global:
    - PATH="$HOME/.local/bin:$PATH"
    - SYMFONY_DEPRECATIONS_HELPER=weak
    - TARGET=test
    - UPSTREAM_URL=https://github.com/sonata-project/{{ repository_name }}.git
    - XMLLINT_INDENT="    "

matrix:
  fast_finish: true
  include:
{% if docs_target %}
    - php: '{{ php|last }}'
      env: TARGET=docs
{% endif %}
{% if docs_target %}
    - php: '{{ php|last }}'
      env: TARGET=lint
{% endif %}
    - php: '{{ php|first }}'
      env: COMPOSER_FLAGS="--prefer-lowest"
{% for package_name,package_versions in versions %}
{% for version in package_versions %}
    - php: '{{ target_php|default(php|last) }}'
      env: {{ package_name|upper }}={{ version }}.*
{% endfor %}
{% if package_versions|length > 0 %}
    - php: '{{ target_php|default(php|last) }}'
      env: {{ package_name|upper }}='dev-master as {{ package_versions|last }}'
{% endif %}
{% endfor %}
    - php: '{{ php|last }}'
      env: SYMFONY_DEPRECATIONS_HELPER=0
  allow_failures:
    - php: nightly
    - env: SYMFONY_DEPRECATIONS_HELPER=0
{% for package_name,package_versions in versions %}
{% if package_versions|length > 0 %}
    - env: {{ package_name|upper }}='dev-master as {{ package_versions|last }}'
{% endif %}
{% endfor %}

before_install:
  - git remote add upstream ${UPSTREAM_URL} && git fetch --all
  - if [[ -x .travis/check_relevant_${TARGET}.sh && "$TRAVIS_PULL_REQUEST" != "false" ]]; then export RELEVANT=$(.travis/check_relevant_${TARGET}.sh); fi;
  - if [[ ! -z ${RELEVANT} ]];then exit 0; fi;
  - if [ -x .travis/before_install_${TARGET}.sh ]; then .travis/before_install_${TARGET}.sh; fi;

install:
  - if [ -x .travis/install_${TARGET}.sh ]; then .travis/install_${TARGET}.sh; fi;

before_script:
  - if [ -x .travis/before_script_${TARGET}.sh ]; then .travis/before_script_${TARGET}.sh; fi;

script: make $TARGET

after_success:
  - if [ -x .travis/after_success_${TARGET}.sh ]; then .travis/after_success_${TARGET}.sh; fi;

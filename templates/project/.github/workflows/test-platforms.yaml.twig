# DO NOT EDIT THIS FILE!
#
# It's auto-generated by sonata-project/dev-kit package.

name: Test on platforms

on:
    schedule:
        - cron: '30 0 * * *'
    push:
        branches:
{% for branch in project.branchesReverse %}
            - {{ branch.name }}
{% endfor %}
    pull_request:

jobs:
    test-mysql:
        name: PHP {% verbatim %}${{ matrix.php-version }} + MySQL ${{ matrix.mysql-version }} + ${{ matrix.dependencies }}{% endverbatim %}

        runs-on: ubuntu-latest

        continue-on-error: {% verbatim %}${{ matrix.allowed-to-fail }}{% endverbatim %}

        env:
            DATABASE_URL: mysql://root@127.0.0.1:3306/sonata_tests

        services:
            mysql:
                image: mysql:{% verbatim %}${{ matrix.mysql-version }}{% endverbatim %}
                options: >-
                    --health-cmd "mysqladmin ping --silent"
                    -e MYSQL_ALLOW_EMPTY_PASSWORD=yes
                    -e MYSQL_DATABASE=sonata_tests
                ports:
                    - 3306:3306

        strategy:
            matrix:
                php-version:
                    - '{{ branch.targetPhpVersion.toString }}'
                mysql-version:
                    - '5.7'
                    - '8.0'
                dependencies: [highest]
                allowed-to-fail: [false]

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Install PHP with extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: {% verbatim %}${{ matrix.php-version }}{% endverbatim %}
                  coverage: none
                  tools: composer:v2
                  extensions: mysqli, pdo_mysql

            - name: Add PHPUnit matcher
              run: echo "::add-matcher::{% verbatim %}${{ runner.tool_cache }}{% endverbatim %}/phpunit.json"

            - name: Install Composer dependencies ({% verbatim %}${{ matrix.dependencies }}{% endverbatim %})
              uses: ramsey/composer-install@v2
              with:
                  dependency-versions: {% verbatim %}${{ matrix.dependencies }}{% endverbatim %}

            - name: Run Tests
              run: make test

    test-postgres:
        name: PHP {% verbatim %}${{ matrix.php-version }} + PostgreSQL ${{ matrix.postgres-version }} + ${{ matrix.dependencies }}{% endverbatim %}

        runs-on: ubuntu-latest

        continue-on-error: {% verbatim %}${{ matrix.allowed-to-fail }}{% endverbatim %}

        env:
            DATABASE_URL: postgresql://postgres:postgres@127.0.0.1:5432/postgres?serverVersion={% verbatim %}${{ matrix.postgres-version }}{% endverbatim %}&charset=utf8

        services:
            postgres:
                image: postgres:{% verbatim %}${{ matrix.postgres-version }}{% endverbatim %}
                env:
                    POSTGRES_PASSWORD: postgres
                options: >-
                    --health-cmd "pg_isready"
                ports:
                    - 5432:5432

        strategy:
            matrix:
                php-version:
                    - '{{ branch.targetPhpVersion.toString }}'
                postgres-version:
                    - '13'
                    - '14'
                    - '15'
                dependencies: [highest]
                allowed-to-fail: [false]

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Install PHP with extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: {% verbatim %}${{ matrix.php-version }}{% endverbatim %}
                  coverage: none
                  tools: composer:v2

            - name: Add PHPUnit matcher
              run: echo "::add-matcher::{% verbatim %}${{ runner.tool_cache }}{% endverbatim %}/phpunit.json"

            - name: Install Composer dependencies ({% verbatim %}${{ matrix.dependencies }}{% endverbatim %})
              uses: ramsey/composer-install@v2
              with:
                  dependency-versions: {% verbatim %}${{ matrix.dependencies }}{% endverbatim %}

            - name: Run Tests
              run: make test

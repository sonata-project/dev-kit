# DO NOT EDIT THIS FILE!
#
# It's auto-generated by sonata-project/dev-kit package.

name: Test

on:
    schedule:
        - cron: '30 0 * * *'
    push:
        branches:
{% for branch in project.branchesReverse %}
            - {{ branch.name }}
{% endfor %}
    pull_request:

permissions:
    contents: read

jobs:
    test:
        name: PHP {% verbatim %}${{ matrix.php-version }} + ${{ matrix.dependencies }} + ${{ matrix.variant }}{% endverbatim %}

        runs-on: ubuntu-latest

        continue-on-error: {% verbatim %}${{ matrix.allowed-to-fail }}{% endverbatim %}

        env:
            SYMFONY_REQUIRE: {% verbatim %}${{matrix.symfony-require}}{% endverbatim %}

{% if branch.hasPhpExtension('mongodb') %}
        services:
            mongo:
                image: mongo
                ports:
                    - 27017:27017

{% endif %}
        strategy:
            matrix:
                php-version:
{% for phpVersion in branch.phpVersions %}
                    - '{{ phpVersion.toString }}'
{% endfor %}
                dependencies: [highest]
                allowed-to-fail: [false]
                symfony-require: ['']
                variant: [normal]
                include:
                    - php-version: '{{ branch.lowestPhpVersion.toString }}'
                      dependencies: lowest
                      allowed-to-fail: false
                      variant: normal
{% for variant in branch.variants|filter(v => v.package != 'symfony/symfony') %}
                    - php-version: '{{ branch.targetPhpVersion.toString }}'
                      dependencies: highest
                      allowed-to-fail: false
                      variant: {{ variant.toString|raw }}
{% endfor %}
{% for variant in branch.variants|filter(v => v.package == 'symfony/symfony') %}
                    - php-version: '{{ branch.targetPhpVersion.toString }}'
                      dependencies: highest
                      allowed-to-fail: false
                      symfony-require: {{ variant.version }}
                      variant: {{ variant.toString|raw }}
{% endfor %}

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Install PHP with extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: {% verbatim %}${{ matrix.php-version }}{% endverbatim %}
                  coverage: pcov
                  tools: composer:v2
{% if branch.phpExtensions is not empty %}
                  extensions: {{ branch.phpExtensions|map(phpExtension => phpExtension.toString)|join(', ') }}
{% endif %}

            - name: Add PHPUnit matcher
              run: echo "::add-matcher::{% verbatim %}${{ runner.tool_cache }}{% endverbatim %}/phpunit.json"

            - name: Globally install symfony/flex
              if: matrix.symfony-require != ''
              run: composer global require --no-progress --no-scripts --no-plugins symfony/flex

            - name: Install variant
              if: matrix.variant != 'normal' && !startsWith(matrix.variant, 'symfony/symfony')
              run: composer require {% verbatim %}${{ matrix.variant }}{% endverbatim %} --no-update

            - name: Install Composer dependencies ({% verbatim %}${{ matrix.dependencies }}{% endverbatim %})
              uses: ramsey/composer-install@v2
              with:
                  dependency-versions: {% verbatim %}${{ matrix.dependencies }}{% endverbatim %}
                  composer-options: --prefer-dist --prefer-stable

            - name: Run Tests with coverage
              run: make coverage

            - name: Send coverage to Codecov
              uses: codecov/codecov-action@v2
              with:
                  file: build/logs/clover.xml

# DO NOT EDIT THIS FILE!
#
# It's auto-generated by sonata-project/dev-kit package.

name: Test

on:
  push:
    branches:
{% for branch in branches|keys %}
      - {{ branch }}
{% endfor %}

  pull_request:
    paths: ['**.php', '**.yml', '**.yaml', '**.xml', '**.twig', '**.js', '**.css', '**.json']

jobs:
  test:
    {% verbatim %}name: PHP ${{ matrix.php-version }} + ${{ matrix.dependencies }} + ${{ matrix.variant }}{% endverbatim %}

    runs-on: ubuntu-latest

    {% verbatim %}continue-on-error: ${{ matrix.allowed_to_fail }}{% endverbatim %}

{% if 'mongodb' in services %}
    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017

{% endif %}
    strategy:
      matrix:
        php-version:
{% for version in php %}
          - '{{ version }}'
{% endfor %}
        dependencies: [highest]
        allowed_to_fail: [false]
        variant: [normal]
        include:
          - php-version: '{{ php|first }}'
            dependencies: lowest
            allowed_to_fail: false
            variant: normal
          - php-version: '8.0'
            dependencies: highest
            allowed_to_fail: true
            variant: normal
{% for package_name, package_versions in versions %}
{% for version in package_versions %}
          - php-version: '{{ target_php|default(php|last) }}'
            dependencies: highest
            allowed_to_fail: false
            variant: '{{ packages[package_name] }}:"{{ version }}{% if not is_dev_branch(version) %}.*{% endif %}"'
{% endfor %}
{% endfor %}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          {% verbatim %}php-version: ${{ matrix.php-version }}{% endverbatim %}
          coverage: pcov
{% if 'mongodb' in services %}
          tools: composer:v2, pecl
          extensions: mongodb
{% else %}
          tools: composer:v2
{% endif %}

      - name: Add PHPUnit matcher
        {% verbatim %}run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"{% endverbatim %}

      - name: Set Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer
        uses: actions/cache@v2
        with:
{%- verbatim %}
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ matrix.variant }}
          restore-keys: ${{ runner.os }}-${{ matrix.php-version }}-composer-
{% endverbatim %}
{% if 'mongodb' in services %}
      - name: Install mongo compatibility layer
        run: composer require alcaeus/mongo-php-adapter --no-update

{% endif %}
      - name: Install variant
        if: matrix.variant != 'normal'
        {% verbatim %}run: composer require ${{ matrix.variant }} --no-update{% endverbatim %}

      - name: Install Composer dependencies (lowest)
        if: matrix.dependencies == 'lowest'
        run: composer update --prefer-dist --no-progress --no-interaction --prefer-stable --prefer-lowest

      - name: Install Composer dependencies (highest)
        if: matrix.dependencies == 'highest' && matrix.php-version != '8.0'
        run: composer update --prefer-dist --no-progress --no-interaction --prefer-stable

      - name: Install Composer dependencies (highest) on PHP 8.0
        if: matrix.dependencies == 'highest' && matrix.php-version == '8.0'
        run: composer update --prefer-dist --no-progress --no-interaction --prefer-stable --ignore-platform-req=php

      - name: Run Tests
        run: make test

      - name: Send coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: build/logs/clover.xml
